// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cvproject/company_worked_in.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type CompanyWorkedIn struct {
	Uuid           string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	CompanyName    string `protobuf:"bytes,2,opt,name=companyName,proto3" json:"companyName,omitempty"`
	TimestampStart string `protobuf:"bytes,3,opt,name=timestampStart,proto3" json:"timestampStart,omitempty"`
	TimestampEnd   string `protobuf:"bytes,4,opt,name=timestampEnd,proto3" json:"timestampEnd,omitempty"`
	Comments       string `protobuf:"bytes,5,opt,name=comments,proto3" json:"comments,omitempty"`
	Creator        string `protobuf:"bytes,6,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *CompanyWorkedIn) Reset()         { *m = CompanyWorkedIn{} }
func (m *CompanyWorkedIn) String() string { return proto.CompactTextString(m) }
func (*CompanyWorkedIn) ProtoMessage()    {}
func (*CompanyWorkedIn) Descriptor() ([]byte, []int) {
	return fileDescriptor_464f8df6d607866b, []int{0}
}
func (m *CompanyWorkedIn) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CompanyWorkedIn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CompanyWorkedIn.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CompanyWorkedIn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompanyWorkedIn.Merge(m, src)
}
func (m *CompanyWorkedIn) XXX_Size() int {
	return m.Size()
}
func (m *CompanyWorkedIn) XXX_DiscardUnknown() {
	xxx_messageInfo_CompanyWorkedIn.DiscardUnknown(m)
}

var xxx_messageInfo_CompanyWorkedIn proto.InternalMessageInfo

func (m *CompanyWorkedIn) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *CompanyWorkedIn) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *CompanyWorkedIn) GetTimestampStart() string {
	if m != nil {
		return m.TimestampStart
	}
	return ""
}

func (m *CompanyWorkedIn) GetTimestampEnd() string {
	if m != nil {
		return m.TimestampEnd
	}
	return ""
}

func (m *CompanyWorkedIn) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

func (m *CompanyWorkedIn) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*CompanyWorkedIn)(nil), "alexs778.cvproject.cvproject.CompanyWorkedIn")
}

func init() { proto.RegisterFile("cvproject/company_worked_in.proto", fileDescriptor_464f8df6d607866b) }

var fileDescriptor_464f8df6d607866b = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4c, 0x2e, 0x2b, 0x28,
	0xca, 0xcf, 0x4a, 0x4d, 0x2e, 0xd1, 0x4f, 0xce, 0xcf, 0x2d, 0x48, 0xcc, 0xab, 0x8c, 0x2f, 0xcf,
	0x2f, 0xca, 0x4e, 0x4d, 0x89, 0xcf, 0xcc, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92, 0x49,
	0xcc, 0x49, 0xad, 0x28, 0x36, 0x37, 0xb7, 0xd0, 0x83, 0xab, 0x45, 0xb0, 0x94, 0x4e, 0x32, 0x72,
	0xf1, 0x3b, 0x43, 0x74, 0x86, 0x83, 0x35, 0x7a, 0xe6, 0x09, 0x09, 0x71, 0xb1, 0x94, 0x96, 0x66,
	0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x42, 0x0a, 0x5c, 0xdc, 0x50, 0x0b,
	0xfc, 0x12, 0x73, 0x53, 0x25, 0x98, 0xc0, 0x52, 0xc8, 0x42, 0x42, 0x6a, 0x5c, 0x7c, 0x25, 0x99,
	0xb9, 0xa9, 0xc5, 0x25, 0x89, 0xb9, 0x05, 0xc1, 0x25, 0x89, 0x45, 0x25, 0x12, 0xcc, 0x60, 0x45,
	0x68, 0xa2, 0x42, 0x4a, 0x5c, 0x3c, 0x70, 0x11, 0xd7, 0xbc, 0x14, 0x09, 0x16, 0xb0, 0x2a, 0x14,
	0x31, 0x21, 0x29, 0x2e, 0x8e, 0xe4, 0xfc, 0xdc, 0xdc, 0xd4, 0xbc, 0x92, 0x62, 0x09, 0x56, 0xb0,
	0x3c, 0x9c, 0x2f, 0x24, 0xc1, 0xc5, 0x9e, 0x5c, 0x94, 0x9a, 0x58, 0x92, 0x5f, 0x24, 0xc1, 0x06,
	0x96, 0x82, 0x71, 0x9d, 0x3c, 0x4f, 0x3c, 0x92, 0x63, 0xbc, 0xf0, 0x48, 0x8e, 0xf1, 0xc1, 0x23,
	0x39, 0xc6, 0x09, 0x8f, 0xe5, 0x18, 0x2e, 0x3c, 0x96, 0x63, 0xb8, 0xf1, 0x58, 0x8e, 0x21, 0x4a,
	0x3f, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39, 0x3f, 0x57, 0xdf, 0x31, 0x27, 0xb5, 0x22,
	0xd8, 0xdc, 0xdc, 0x42, 0xdf, 0x39, 0x2c, 0x00, 0x1a, 0x74, 0x15, 0xfa, 0x88, 0x60, 0x2c, 0xa9,
	0x2c, 0x48, 0x2d, 0x4e, 0x62, 0x03, 0x87, 0x9d, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x96, 0x88,
	0xa0, 0x3d, 0x60, 0x01, 0x00, 0x00,
}

func (m *CompanyWorkedIn) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CompanyWorkedIn) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CompanyWorkedIn) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintCompanyWorkedIn(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Comments) > 0 {
		i -= len(m.Comments)
		copy(dAtA[i:], m.Comments)
		i = encodeVarintCompanyWorkedIn(dAtA, i, uint64(len(m.Comments)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.TimestampEnd) > 0 {
		i -= len(m.TimestampEnd)
		copy(dAtA[i:], m.TimestampEnd)
		i = encodeVarintCompanyWorkedIn(dAtA, i, uint64(len(m.TimestampEnd)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TimestampStart) > 0 {
		i -= len(m.TimestampStart)
		copy(dAtA[i:], m.TimestampStart)
		i = encodeVarintCompanyWorkedIn(dAtA, i, uint64(len(m.TimestampStart)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.CompanyName) > 0 {
		i -= len(m.CompanyName)
		copy(dAtA[i:], m.CompanyName)
		i = encodeVarintCompanyWorkedIn(dAtA, i, uint64(len(m.CompanyName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Uuid) > 0 {
		i -= len(m.Uuid)
		copy(dAtA[i:], m.Uuid)
		i = encodeVarintCompanyWorkedIn(dAtA, i, uint64(len(m.Uuid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintCompanyWorkedIn(dAtA []byte, offset int, v uint64) int {
	offset -= sovCompanyWorkedIn(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *CompanyWorkedIn) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Uuid)
	if l > 0 {
		n += 1 + l + sovCompanyWorkedIn(uint64(l))
	}
	l = len(m.CompanyName)
	if l > 0 {
		n += 1 + l + sovCompanyWorkedIn(uint64(l))
	}
	l = len(m.TimestampStart)
	if l > 0 {
		n += 1 + l + sovCompanyWorkedIn(uint64(l))
	}
	l = len(m.TimestampEnd)
	if l > 0 {
		n += 1 + l + sovCompanyWorkedIn(uint64(l))
	}
	l = len(m.Comments)
	if l > 0 {
		n += 1 + l + sovCompanyWorkedIn(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovCompanyWorkedIn(uint64(l))
	}
	return n
}

func sovCompanyWorkedIn(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCompanyWorkedIn(x uint64) (n int) {
	return sovCompanyWorkedIn(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CompanyWorkedIn) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCompanyWorkedIn
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CompanyWorkedIn: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CompanyWorkedIn: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uuid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCompanyWorkedIn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCompanyWorkedIn
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCompanyWorkedIn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uuid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompanyName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCompanyWorkedIn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCompanyWorkedIn
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCompanyWorkedIn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CompanyName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimestampStart", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCompanyWorkedIn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCompanyWorkedIn
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCompanyWorkedIn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TimestampStart = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimestampEnd", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCompanyWorkedIn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCompanyWorkedIn
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCompanyWorkedIn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TimestampEnd = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comments", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCompanyWorkedIn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCompanyWorkedIn
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCompanyWorkedIn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Comments = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCompanyWorkedIn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCompanyWorkedIn
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCompanyWorkedIn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCompanyWorkedIn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCompanyWorkedIn
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCompanyWorkedIn(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCompanyWorkedIn
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCompanyWorkedIn
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCompanyWorkedIn
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCompanyWorkedIn
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCompanyWorkedIn
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCompanyWorkedIn
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCompanyWorkedIn        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCompanyWorkedIn          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCompanyWorkedIn = fmt.Errorf("proto: unexpected end of group")
)
